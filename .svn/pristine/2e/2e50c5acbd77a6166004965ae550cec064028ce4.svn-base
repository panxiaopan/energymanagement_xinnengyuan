<template>
  <el-row style="height:100%;min-width:1460px">
    <el-col :span="24" class="top_enry">
      <el-tabs v-model="activecurrent" @tab-click="handleClick" size="big">
        <el-tab-pane label="主页" name="first"></el-tab-pane>
        <el-tab-pane label="设备" name="second"></el-tab-pane>
        <el-tab-pane label="报警" name="third"></el-tab-pane>
        <el-tab-pane label="工单" name="fourth"></el-tab-pane>
      </el-tabs>
    </el-col>
    <el-col :span="24">
      <el-col :span="16" class="padding20">
        <div class="Statmessage mainbox">
          <div class="padding20">
            <span class="boxName">基本情况</span>
            <div class="typeradiousgood" v-if="status.value===10"></div>
            <div class="typeradiousgeneral" v-if="status.value===20"></div>
            <div class="typeradiousbad" v-if="status.value===30"></div>
            <span class="typedesc">{{status.desc}}</span>
          </div>
          <div class="middlemessage">
            <div class="middeboxmes">
              <div class="unitName nametop">额定功率 ({{messageobj_all.ratedPower.unit}})</div>
              <div class="unitName namebottom">{{messageobj_all.ratedPower.value}}</div>
            </div>
            <div class="middeboxmes">
              <div class="unitName nametop">电池容量 ({{messageobj_all.batteryCapacity.unit}})</div>
              <div class="unitName namebottom">{{messageobj_all.batteryCapacity.value}}</div>
            </div>
            <div class="middeboxmes">
              <div class="unitName nametop">有功功率 ({{messageobj_all.activePower.unit}})</div>
              <div class="unitName namebottom">{{messageobj_all.activePower.value}}</div>
            </div>
            <div class="middeboxmes">
              <div class="unitName nametop">无功功率 ({{messageobj_all.reactivePower.unit}})</div>
              <div class="unitName namebottom">{{messageobj_all.reactivePower.value}}</div>
            </div>
          </div>
          <div class="padding20">
            <span class="boxName">收益&电量</span>
          </div>
          <div class="earnmiddle">
            <div class="earningstoday" v-for="(item,index) in EarningsData" :key="index">
              <div class="earningsimgtop">
                <img :src="Earningsdataimg[index]" alt class="boximg" />
              </div>
              <div class="unitName nametop left20">{{item.name+'('+item.unit+')'}}</div>
              <div class="unitName namebottom left20">{{item.value}}</div>
            </div>
          </div>
          <div class="padding20">
            <span class="boxName">运行信息</span>
          </div>
          <div class="earnbottom">
            <div class="operationmessage" v-for="(item,index) in operationdata" :key="index">
              <div class="unitName nametop left20">{{item.name+'('+item.unit+')'}}</div>
              <div class="unitName namebottom left20">{{item.value}}</div>
            </div>
          </div>
        </div>
      </el-col>
      <el-col :span="8" class="padding20">
        <div class="Statmessage mainbox">
          <div style="padding:20px;position:relative">
            <div class="boxName">设备状态统计</div>
            <div class="Devicetotal">
              <div class="DeviceNumber">{{totalDevice}}</div>
              <div class="Devicepcs">设备总数(个)</div>
            </div>
            <div style="height:420px">
              <ve-histogram
                :data="devicechartData"
                :settings="devicechartSettings"
                :extend="devicechartExtend"
                :yAxis="deviceyAxisOption"
                :legend="devicelegend_top"
                height="100%"
                :grid="devicegrid"
                :colors="deviceColor"
              ></ve-histogram>
            </div>
          </div>
        </div>
      </el-col>
    </el-col>
    <el-col :span="24">
      <el-col :span="12" class="padding20">
        <div class="Statmessage mainbox">
          <div class="padding20">
            <span class="boxName">功率趋势图</span>
          </div>
          <div style="float: right; margin-right: 30px;">
            <el-date-picker
              v-model="powertime"
              align="right"
              type="date"
              placeholder="选择日期"
              value-format="yyyy-MM-dd"
              :picker-options=" powerpickerOptions"
            ></el-date-picker>
          </div>
          <div style="height:300px;margin-top: 60px;">
            <ve-line
              :data="powerchartData"
              height="100%"
              :settings="powerchartSettings"
              :xAxis="xAxisOption"
              :colors="powercolor"
              :yAxis="poweryAxis"
            ></ve-line>
          </div>
        </div>
      </el-col>
      <el-col :span="12" class="padding20">
        <div class="Statmessage mainbox">
          <div class="padding20">
            <span class="boxName">充电放电趋势图</span>
          </div>
        </div>
      </el-col>
    </el-col>
  </el-row>
</template>

<script>
import { getsubstation, energyStoragepowers } from "@/api/api";
import {
  timeFormastart,
  timeFormanow,
  timeFormatdata,
  timeFormatmonth,
  timeFormatyear
} from "@/assets/js/common";
export default {
  data() {
    return {
      activecurrent: "first",
      status: {},
      messageobj_all: {
        ratedPower: {},
        batteryCapacity: {},
        activePower: {},
        reactivePower: {}
      }, //所有信息,
      Earningsdataimg: [
        "../../../static/imgs/storedred.png",
        "../../../static/imgs/storedred.png",
        "../../../static/imgs/storedgreen.png",
        "../../../static/imgs/storedgreen.png",
        "../../../static/imgs/storedblue.png",
        "../../../static/imgs/storedblue.png"
      ],
      EarningsData: [], //收益数组前六个
      operationdata: [],
      totalDevice: 0, //设备总数
      devicechartData: {
        //能源汇总
        columns: ["类型", "正常", "离线", "报警", "故障"],
        rows: []
      },
      devicechartSettings: {
        stack: { 类型: ["正常", "离线", "报警", "故障"] },
        textStyle: {
          color: "#fff"
        },
        itemStyle: {
          //color: ["#c23531", "#2f4554", "#61a0a8", "#ca8622"]
        }
      },
      deviceColor: ["#00CC92", "#adadad", "red", "#FF9D6B"],
      devicechartExtend: {
        barWidth: "30px",
        top: "-20px",
        barCategoryGap: "10%",
        barGap: "10%",
        xAxis: {
          axisLine: {
            show: true,
            lineStyle: { color: "#b1b1b1" } //x轴坐标的显示颜色
          }
        }
      },
      deviceyAxisOption: {
        axisLine: {
          show: true,
          lineStyle: { color: "#b1b1b1" } //y轴坐标的显示颜色
        },
        name: "数量/台"
        // splitLine: {
        //   show: false
        // }
      },
      devicelegend_top: {
        top: 25,
        right: 10
        // textStyle: {
        //   color: "#fff"
        // }
      },
      devicegrid: {
        right: 50,
        left: 50,
        bottom: 20,
        // top: -20
        top: 120
      },
      deviceamount: [], //各个设备的总数
      powertime: timeFormatdata(new Date()), //功率时间
      powerpickerOptions: {
        disabledDate(time) {
          return time.getTime() > Date.now();
        },
        shortcuts: [
          {
            text: "今天",
            onClick(picker) {
              picker.$emit("pick", new Date());
            }
          },
          {
            text: "昨天",
            onClick(picker) {
              const date = new Date();
              date.setTime(date.getTime() - 3600 * 1000 * 24);
              picker.$emit("pick", date);
            }
          },
          {
            text: "一周前",
            onClick(picker) {
              const date = new Date();
              date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);
              picker.$emit("pick", date);
            }
          }
        ]
      },
      powerchartData: {
        columns: ["time", "activePower", "reactivePower"],
        rows: []
      },
      powerchartSettings: {
        legendName: {
          activePower: "",
          reactivePower: ""
        },
        labelMap: {
          activePower: "",
          reactivePower: ""
        }
      },
      xAxisOption: {
        //修改截取的时间
        type: "category",
        splitLine: {},
        axisTick: {},
        axisLabel: {
          formatter: function(value) {
            var str_before = value.substring(10, 20);
            // var str_after = value.split(" ")[1];
            return str_before;
          }
        }
      },
      powercolor: ["#1B77FC", "#FB5A6E"],
      poweryAxis: {
        axisLine: {
          show: true,
          lineStyle: { color: "#b1b1b1" } //y轴坐标的显示颜色
        },
        name: ""
      },
      powerunits: [] //功率单
    };
  },
  methods: {
    handleClick() {},
    getsubtationlist() {
      //获取子站的信息
      getsubstation(this.$route.params.id, this.$route.params.subid).then(
        res => {
          console.log("子站信息");
          console.log(res);
          if (res.data.head.code == 0) {
            this.status = res.data.data.status;
            this.messageobj_all = res.data.data;
            this.EarningsData = res.data.data.statistics.slice(0, 6);
            this.operationdata = res.data.data.statistics.slice(-6);
            console.log(this.operationdata);
            let data = res.data.data.deviceStatusWithCountAndTypes;
            for (let i in data) {
              let temp = {};
              let devitotal = {};
              let devicenum = 0;
              for (let n of data[i].deviceStatusWithCounts) {
                temp[n["desc"]] = n.count;
                temp["类型"] = data[i].type;
                devicenum += n.count;
                devitotal["type"] = data[i].type;
                devitotal["total"] = devicenum;
              }
              this.devicechartData.rows.push(temp);
              this.deviceamount.push(devitotal);
            }
            for (let k = 0; k < this.deviceamount.length; k++) {
              this.totalDevice += this.deviceamount[k].total; //总数,
            }
          }
        }
      );
    },
    getenergyStoragepowers() {
      //获取功率
      var parms = {
        date: this.powertime
      };
      energyStoragepowers(this.$route.params.subid, parms).then(res => {
        console.log("功率");
        console.log(res);
        if (res.data.head.code == 0) {
          this.powerchartData.rows = res.data.data.logs;
          let powerunits = res.data.data.units;
          // this.powerchartSettings.legendName.activePower =
          //   "有功功率" + res.data.data.units[0];
          // this.powerchartSettings.reactivePower =
          //   "无功功率" + res.data.data.units[1];

          this.powerchartSettings.labelMap.activePower =
            "有功功率" + res.data.data.units[0];
          this.powerchartSettings.labelMap.reactivePower =
            "无功功率" + res.data.data.units[1];
        }
      });
    }
  },
  mounted() {
    this.getsubtationlist();
    this.getenergyStoragepowers();
  }
};
</script>

<style lang="scss" scoped>
.Statmessage {
  height: 490px;
  // border: 1px solid red;
}
.unitName {
  height: 30px;
  line-height: 30px;
}
.middlemessage {
  height: 60px;
  // border: 1px solid red;
  display: flex;
  justify-content: space-evenly;
}
.middeboxmes {
  height: 60px;
  width: 200px;
  // border: 1px solid;
  // text-align: center;
}
.nametop {
  color: #636f8a;
  font-family: "微软雅黑";
}
.namebottom {
  color: #181343;
  font-family: "微软雅黑";
  font-weight: 600;
  font-size: 18px;
}
.earnmiddle {
  height: 128px;
  // border: 1px solid red;
  display: flex;
  // justify-items: center;
  justify-content: space-around;
}
.earningstoday {
  border: 1px solid #efefef;
  box-shadow: 0px 0px 8px 6px rgba(245, 245, 250, 0.8);
  border-radius: 5px;
  display: inline-block;
  vertical-align: middle;
  width: 135px;
  height: 128px;
}
.left20 {
  padding-left: 20px;
}
.earningsimgtop {
  height: 45px;
  // border: 1px solid;
  line-height: 45px;
  text-align: center;
}
.earnbottom {
  height: 60px;
  // border: 1px solid red;
  display: flex;
  justify-content: space-around;
}
.operationmessage {
  width: 159px;
  height: 60px;
  border-right: 1px solid #b6bbc6;
}
.operationmessage:last-of-type {
  border: none;
}
</style>
<style >
.top_enry .el-tabs__nav-scroll {
  padding-left: 30px;
}
</style>