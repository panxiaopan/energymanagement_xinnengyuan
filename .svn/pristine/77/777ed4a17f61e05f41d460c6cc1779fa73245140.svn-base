<template>
  <el-row style="height:100%;padding:20px 0px 0px 20px ;min-width:1460px">
    <div class="mainboxcama">
      <el-col :span="24" style="height:100%">
        <el-col :span="8" class="deviceleftlist">
          <div class="devicelist">
            <div style="padding:20px">
              <el-input placeholder="请输入设备名称" v-model="deviceName" class="input-with-select">
                <el-button slot="append" icon="el-icon-search" @click="seachDevice"></el-button>
              </el-input>
              <div style="min-height:400px;;margin-top:20px;">
                <div class="deviceselect" v-for="(item ,index) in Camedatalist" :key="index">
                  <el-radio-group
                    v-model="currentradio"
                    @change="changeradio"
                    style="width:100%;height:100%"
                  >
                    <el-radio :label="index">
                      <p style="padding: 0 10px">
                        <span class="currentdeviceName">{{item.name}}</span>
                        <!-- <span style="float:right">
                      <span class="devicetype devicebreakdown" v-if="item.status.value==40"></span>
                      <span class="devicetype devicealrem" v-if="item.status.value==30"></span>
                      <span class="devicetype deviceoffline" v-if="item.status.value==20"></span>
                      <span class="devicetype devicenormal" v-if="item.status.value==10"></span>
                      {{item.status.desc}}
                        </span>-->
                      </p>
                      <!-- <span style="margin-left:10px">
                    <i class="el-icon-location"></i>
                  </span>
                      <span>{{item.address}}</span>-->
                    </el-radio>
                  </el-radio-group>
                </div>
              </div>
              <el-col :span="24" style="margin-top:20px">
                <page-compent :pageSize="size" :pagetotal="paggtatol" @fanye="pageIndexChange"></page-compent>
              </el-col>
            </div>
          </div>
        </el-col>
        <el-col :span="16" style="padding-right:22px">
          <div>
            <el-radio-group
              v-model="SelectType"
              size="medium"
              class="displayButn"
              @change="changeSelectType"
            >
              <el-radio-button label="监控"></el-radio-button>
              <el-radio-button label="回放"></el-radio-button>
            </el-radio-group>
          </div>
          <!-- <textarea id="url" placeholder="这里输入直播地址">http://hls.open.ys7.com/openlive/f01018a141094b7fa138b9d0b856507b.m3u8</textarea> -->
          <div class="btn-container">
            <!-- <button id="init" @click="beginPlay">初始化播放</button>
            <button id="stop">结束</button>-->
            <div class="CarameName Crametitle">监控名称：{{Current_CrameName}}</div>
            <div class="serial-number Crametitle">序列号：{{serial_number}}</div>
          </div>
          <div style="padding-left:40px;margin-top:20px">
            <!-- <video id="myPlayer" autoplay controls playsinline webkit-playsinline></video> -->
            <div id="myPlayer" style="width: 600px; height: 400px;"></div>
          </div>
          <div style="padding-left:40px;margin-top:20px">
            <el-tooltip class="item" effect="dark" content="向上" placement="top-start">
              <el-button
                size="mini"
                @mousedown.native="begin_move(0)"
                @mouseup.native="move_end(0)"
                icon="el-icon-arrow-up"
                type="primary"
              ></el-button>
            </el-tooltip>
            <el-tooltip class="item" effect="dark" content="向下" placement="top-start">
              <el-button
                size="mini"
                icon="el-icon-arrow-down"
                type="primary"
                @mousedown.native="begin_move(1)"
                @mouseup.native="move_end(1)"
              ></el-button>
            </el-tooltip>
            <el-tooltip class="item" effect="dark" content="向左" placement="top-start">
              <el-button
                size="mini"
                icon="el-icon-arrow-left"
                type="primary"
                @mousedown.native="begin_move(2)"
                @mouseup.native="move_end(2)"
              ></el-button>
            </el-tooltip>
            <el-tooltip class="item" effect="dark" content="向右" placement="top-start">
              <el-button
                size="mini"
                icon="el-icon-arrow-right"
                type="primary"
                @mousedown.native="begin_move(3)"
                @mouseup.native="move_end(3)"
              ></el-button>
            </el-tooltip>
            <el-tooltip class="item" effect="dark" content="放大" placement="top-start">
              <el-button
                size="mini"
                icon="el-icon-plus"
                type="primary"
                :round="true"
                style="margin-left:60px"
                @mousedown.native="begin_move(8)"
                @mouseup.native="move_end(8)"
              ></el-button>
            </el-tooltip>
            <el-tooltip class="item" effect="dark" content="缩小" placement="top-start">
              <el-button
                size="mini"
                icon="el-icon-minus"
                type="primary"
                :round="true"
                @mousedown.native="begin_move(9)"
                @mouseup.native="move_end(9)"
              ></el-button>
            </el-tooltip>
          </div>
          <el-dialog title="选择需要回放的时间段" :visible.sync="SelectTimedialogVisible" width="30%">
            <el-date-picker
              v-model="Select_time"
              type="datetimerange"
              range-separator="至"
              start-placeholder="开始日期"
              end-placeholder="结束日期"
              :picker-options="pickerOptions1"
              value-format="yyyyMMddHHmmss"
              align="right"
            ></el-date-picker>
            <span slot="footer" class="dialog-footer">
              <el-button @click="SelectTimedialogVisible = false">取 消</el-button>
              <el-button type="primary" @click="SureSelectTime">确 定</el-button>
            </span>
          </el-dialog>
        </el-col>
        <!-- <el-col :span="8" class="alarm_right">
                    <div class="alarm_Noice">报警通知</div>
                    <el-col :span="8" v-for="(item, index) in alremData" :key="index">
                      <el-card :body-style="{ padding: '0px' }">
                        <img :src="item.alarmPicUrl" class="image" @click="BlowUp_img(item)" />
                        <div style="padding:10px 0px 8px 10px;">
                          <span>{{item.alarmDesc}}</span>
                          <div class="bottom clearfix">
                            <time class="time">{{item.alarmTime.substring(5)}}</time>
                          </div>
                        </div>
                      </el-card>
                    </el-col>
                    <el-col :span="24" style="padding-top:40px">
                      <el-pagination
                        @current-change="handleCurrentChange"
                        :page-size="size"
                        layout="prev, pager, next "
                        :total="totalNum_arm"
                      ></el-pagination>
                    </el-col>
                    <el-dialog
                      :title="time_alrem +'    '+'异常信息:'+ unuaual_arem "
                      :visible.sync="Blowdialog"
                      width="40%"
                    >
                      <div style="width:100%;height:100%">
                        <img :src="Big_img" alt style="width:100%;height:100%" />
                      </div>
                      <span slot="footer" class="dialog-footer">
                        <el-button @click="Blowdialog = false" type="primary" size="small">关闭</el-button>
                      </span>
                    </el-dialog>
        </el-col>-->
      </el-col>
    </div>
  </el-row>
</template>

<script>
import $ from "jquery";
require("./yingshi/ezuikit.js"); //萤石的js包。。详情参考萤石的
import pageCompent from "@/components/pagination"; //分页
import { getcamera, getcameraAccessToken, getsubstation } from "@/api/api";

export default {
  components: {
    pageCompent
  },
  data() {
    return {
      activecurrent: "first",
      currentradio: 0,
      deviceName: "",
      start: 0, //起始记录数，默认为0
      size: 10, //每页记录数，默认为10
      paggtatol: null, //总条数/
      Camedatalist: [],
      SelectTimedialogVisible: false,
      Current_CrameName: "", //点击的摄像头名字
      serial_number: "", //点击的摄像头序列号
      SelectType: "监控", //默认是监控的页面
      totalNum_arm: null, //总条数
      alremData: [], //报警
      Big_img: "", //放大图片的url
      Blowdialog: false, //
      time_alrem: "", //放大时候报警的时间
      unuaual_arem: "", //放大时候的异常
      gettoken: "", //获取用户的token
      Select_time: "", //查询时间
      pickerOptions1: {
        disabledDate(time) {
          return time.getTime() > Date.now();
        }
      }
    };
  },
  methods: {
    handleClick() {},
    getsubSummary() {
      getsubstation(this.$route.params.id, this.$route.params.subid).then(
        res => {
          // cosnole.log("总汇");
          console.log(res);
        }
      );
    },
    getdevicelist() {
      //获取子站的设备列表\
      var parms = {
        start: this.start,
        size: this.size,
        keyword: this.deviceName
      };
      //return Promise.resolve

      getcamera(this.$route.params.subid, parms).then(res => {
        console.log("=设备==");
        console.log($);
        console.log(res);

        if (res.data.head.code == 0) {
          this.Camedatalist = res.data.data.rows;
          // this.$refs.singleTable.setCurrentRow(this.Camedatalist[0]);
          // console.log(Camedatalist[0].id);
          if (this.currentpage == 0) {
            this.totalNum = res.data.data.total;
          }

          this.Current_CrameName = this.Camedatalist[0].name;
          this.serial_number = this.Camedatalist[0].sn;
          console.log(this.Camedatalist);
          // this.beginPlay();

          // this.Camedatalist = res.data.data.rows;

          if (this.start == 0) {
            //因为就第一次的时候总数是对的,,
            //页面值过来了一次
            this.paggtatol = res.data.data.total;
          }

          // setTimeout(() => {
          //   //
          //   this.beginPlay();
          // }, 500);
        }
      });
    },
    seachDevice() {
      //关键词查找
      this.getdevicelist();
    },
    pageIndexChange(index) {
      console.log(index);
      let page = (index - 1) * this.size;
      this.start = page;
      this.getdevicelist();
      setTimeout(() => {
        this.getToken(); //获取token
      }, 500);
      setTimeout(() => {
        this.beginPlay();
      }, 1000);
      //分页
    },
    changeradio() {
      console.log("当前选中");
      console.log(this.currentradio);
      //
      // this.$nextTick(() => {
      //   this.getdevicedDeil();
      // });
    },
    changeSelectType() {
      //切换选项卡监控与回放
      console.log(this.SelectType);
      if (this.SelectType == "回放") {
        this.Select_time = ""; //清空上次选的值
        this.SelectTimedialogVisible = true;
      } else {
        $("#myPlayer").attr("src", this.Camedatalist[0].liveUrl); //切换成直播的时候
        var player = new EZUIKit.EZUIPlayer("myPlayer");
        // 日志
        player.on();
        this.SelectTimedialogVisible = false;
      }
    },
    currentCarame(index) {
      //当前点钟的摄像头
      console.log(index);
      this.isactive = index;
      this.Current_CrameName = this.Camedatalist[index].name; //点击的摄像头名字
      this.serial_number = this.Camedatalist[index].sn; //点击的摄像头序列号
      $("#myPlayer").attr("src", this.Camedatalist[index].liveUrl);
      var player = new EZUIKit.EZUIPlayer("myPlayer");
      // 日志
      player.on();
      // this.getAlrmlist(); //更新报警截图
    },
    beginPlay() {
      //开始播放

      console.log("开始播放=============");
      console.log(this.Camedatalist[0].liveUrl);
      // console.log(this.gettoken);

      let palyer;
       setTimeout(() => {
             player = new EZUIKit.EZUIPlayer({
                id: "myPlayer",
                url: this.Camedatalist[0].liveUrl,
                autoplay: true,
                accessToken:
                  "at.aro8jift3rcldyqb3vfkpuss5kljebg0-6pljshqhyl-1azv9dy-7skcv2x0q",
                decoderPath: "http://192.168.1.99/ienergy-web/yingshi", //绝对路径
                width: 600,
                height: 400
                // handleError: handleError
              });
               player.play();
       }, 100);

       
      // setTimeout(() => {
      //   player.play();
      // }, 2000);

      // function log(str) {
      //   var div = document.createElement("DIV");
      //   div.innerHTML =
      //     new Date().Format("yyyy-MM-dd hh:mm:ss.S") + JSON.stringify(str);
      //   document.body.appendChild(div);
      // }
      // player.play({
      //   handleError: handleError
      // });

      // player.on("log", log);
      // 日志
    },

    changeSelectType() {
      //切换选项卡监控与回放
      console.log(this.SelectType);
      if (this.SelectType == "回放") {
        this.Select_time = ""; //清空上次选的值
        this.SelectTimedialogVisible = true;
      } else {
        $("#myPlayer").attr("src", this.Camedatalist[0].liveUrl); //切换成直播的时候
        var player = new EZUIKit.EZUIPlayer("myPlayer");
        // 日志
        player.on();
        this.SelectTimedialogVisible = false;
      }
    },
    SureSelectTime() {
      //确定选中时间
      this.SelectTimedialogVisible = false;
      console.log(this.Select_time);
    },

    begin_move(e) {
      //调整摄像头
      //操作命令：0-上，1-下，2-左，3-右，4-左上，5-左下，6-右上，7-右下，8-放大，9-缩小，10-近焦距，11-远焦距
      console.log(e);
      console.log("按下去了，");
      var parms = {
        accessToken: this.gettoken,
        deviceSerial: Number(this.Camedatalist[this.isactive].sn), //设备系列号
        channelNo: this.Camedatalist[this.isactive].cameraNo,
        speed: 1, //移动速度..   0 1   2  ,,1是适中
        direction: e //操作命令
      };

      axios({
        //使用axios 发送post 请求,,参数是拼接到后面接口后面的
        method: "post",
        url: "https://open.ys7.com/api/lapp/device/ptz/start",
        params: parms
      })
        .then(function(response) {
          console.log("成功");
          console.log(response);
        })
        .catch(function(error) {
          console.log("失败");
          console.log(error);
        });
    },
    getToken() {
      //获取摄像头的token
      // console.log("token==================");
      // let url = `./socialUnits/${this.unitId}/cameras/${this.Camedatalist[this.isactive].id}/cameraAccessToken`;

      getcameraAccessToken(1).then(res => {
        console.log("获取摄像头的token");
        console.log(res);
        if (res.data.head.code == 0) {
          this.gettoken = res.data.data;
          console.log(this.gettoken);
        }
      });
    },

    BlowUp_img(item) {
      //放大图片
      console.log("放大图片");
      console.log(item);
      this.Blowdialog = true;
      this.Big_img = item.alarmPicUrl;
      this.time_alrem = item.alarmTime;
      this.unuaual_arem = item.alarmDesc;
    }
  },
  mounted() {
    this.getdevicelist();
    this.getToken(); //获取token
    // setTimeout(() => {

    // }, 500);
    setTimeout(() => {
      this.beginPlay();
    }, 6000);

    this.getsubSummary();
  }
};
</script>

<style lang="scss" scoped>
.devicelist {
  height: 100%;
  border: 1px solid #ededed;
  box-shadow: 0px 0px 8px 6px rgba(245, 245, 250, 0.8);
  border-radius: 5px;
  overflow: hidden;
}
.deviceleftlist {
  height: 100%;
  padding: 20px 70px 20px 20px;
}
.device_detail {
  width: 40%;
  font-size: 14px;
  font-family: "微软雅黑";
  color: #606266;
  .devicesty {
    float: right;
    width: 60%;
  }
}
.mainboxcama {
  border: 1px solid #ededed;
  box-shadow: 0px 0px 8px 6px rgba(245, 245, 250, 0.8);
  background: #fff;
  border-radius: 8px;
  // height: calc(100% - 40px);
  height: 100%;
  overflow: hidden;
}
.Crameright {
  background: #ffffff;
  border-radius: 5px;
  -webkit-box-shadow: 0px 0px 10px 2px rgba(50, 137, 210, 0.2);
  box-shadow: 0px 0px 10px 2px rgba(50, 137, 210, 0.2);
  margin: 5px 0px 5px 15px;
  height: 100%;
  min-height: 680px;
}
.displayButn {
  float: left;
  vertical-align: middle;
  line-height: 80px;
  position: absolute;
  margin-left: 30%;
}
.is_active_Class {
  background: #b0cae0;
}
.no_active_Class {
  background: #f7f7f7;
}
#myPlayer {
  min-width: 400px;
  width: 100%;
  min-height: 400px;
}

.Crametitle {
  height: 40px;
  line-height: 40px;
  padding-left: 40px;
  font-family: "微软雅黑";
}
.CarameName {
  font-weight: 800;
  font-size: 16px;
}
.alarm_Noice {
  text-align: center;
  font-size: 18px;
  font-family: MicrosoftYaHei-Bold;
  font-weight: bold;
  height: 100px;
  line-height: 100px;
  /* color: #e50d0d; */
  border-bottom: 2px solid #f7f7f7;
  margin-right: 18px;
}
.alarm_right {
  min-width: 140px;
  padding-right: 22px;
}
.time {
  font-size: 13px;
  color: #999;
}

.bottom {
  margin-top: 13px;
  line-height: 12px;
}

.button {
  padding: 0;
  float: right;
}

.image {
  width: 100%;
  display: block;
  cursor: pointer;
}

.clearfix:before,
.clearfix:after {
  display: table;
  content: "";
}

.clearfix:after {
  clear: both;
}
</style>
<style>
.deviceselect .el-radio__inner {
  display: none;
}
.deviceselect .el-radio {
  width: 100%;
  height: 100%;
  /* vertical-align: middle;
  line-height: 80px; */
  vertical-align: top;
}
.deviceselect .is-checked {
  background: aliceblue;
}
</style>