<template>
  <el-row class="loginConteiner">
    <el-col class="backgroundstart">
      <div class="fromtable" :class=" show_PassForm ? 'form_login': 'from_passcheck' ">
        <el-form :model="LoginForm" :rules="rules" ref="loginForm" v-if="show_PassForm">
          <el-form-item style="text-align:center">
            <span class="companyName">智慧新能源管理平台</span>
          </el-form-item>
          <el-form-item prop="name">
            <el-input
              v-model="LoginForm.name"
              placeholder="登录名/邮箱/手机号"
              class="inputwidth inputusericon"
            >
              <i slot="prefix" class="el-input__icon el-icon-user-solid"></i>
            </el-input>
          </el-form-item>
          <el-form-item prop="pass" :error="showError">
            <el-input
              v-model="LoginForm.pass"
              placeholder="请输入密码"
              @keyup.native.enter="submitlogin()"
              type="password"
              class="inputwidth inputpassword"
            >
              <i slot="prefix" class="el-input__icon el-icon-lock"></i>
            </el-input>
          </el-form-item>
          <el-form-item>
            <el-input type="button" @click.native="submitlogin" value="登录" class="Enter"></el-input>
          </el-form-item>
        </el-form>

        <el-form
          :model="ruleForm"
          :rules="rulespass"
          ref="ruleForm"
          label-width="68px"
          label-position="left"
          v-else
        >
          <el-form-item style="text-align:center">
            <span class="companyName">修改密码</span>
          </el-form-item>
          <el-form-item prop="Mobile_phone" label="手机号">
            <el-input
              v-model="ruleForm.Mobile_phone"
              placeholder="注册手机号"
              class="inputwidth inputusericon"
            >
              <i slot="prefix" class="el-input__icon el-icon-phone"></i>
            </el-input>
          </el-form-item>
          <el-form-item prop="code" label="验证码">
            <el-input v-model="ruleForm.code" placeholder="请输入验证码" class="inputwidth inputpassword">
              <i slot="prefix" class="el-input__icon el-icon-message"></i>
              <el-button
                slot="append"
                size="small"
                @click="getCode"
                :disabled="disabled"
              >{{getSmsCodeLabel}}</el-button>
            </el-input>
          </el-form-item>

          <el-form-item label="密码" prop="new_password" placehoder="输入密码">
            <el-input type="password" v-model="ruleForm.new_password" autocomplete="off">
              <i slot="prefix" class="el-input__icon el-icon-key"></i>
            </el-input>
          </el-form-item>
          <el-form-item label="确认密码" prop="checkPass">
            <el-input
              type="password"
              v-model="ruleForm.checkPass"
              autocomplete="off"
              placeholder="请确认密码"
            >
              <i slot="prefix" class="el-input__icon el-icon-key"></i>
            </el-input>
          </el-form-item>
          <el-form-item>
            <el-button type="primary" @click="submitForm('ruleForm')" size="mini">提交</el-button>
            <el-button @click="resetForm('ruleForm')" size="mini">重置</el-button>
          </el-form-item>
        </el-form>

        <!-- <span>忘记密码</span> -->
        <div style="position: absolute; top: 85%;right: 3%;">
          <el-button type="text" class="forget_password" @click="forgrtPass">
            <span v-if="show_PassForm">忘记密码</span>
            <span v-else>返回登录</span>
          </el-button>
        </div>
      </div>
      <div class="statement">©©2018 深圳市综合能源有限公司备案号: 粤ICP备17146301号-2</div>
    </el-col>
  </el-row>
</template>
<script>
import { userlogin, forgetpassword } from "@/api/api";
import { mapGetters, mapActions } from "vuex";

export default {
  data() {
    var telphon = (rule, value, callback) => {
      if (!/^(\(\d{3,4}\)|\d{3,4}-|\s)?\d{7,14}$/.test(value)) {
        callback(new Error("电话号码格式有误"));
      }
    };

    var validatePass = (rule, value, callback) => {
      if (value === "") {
        callback(new Error("请输入密码"));
      } else {
        if (this.ruleForm.checkPass !== "") {
          this.$refs.ruleForm.validateField("checkPass");
        }
        callback();
      }
    };
    var validatePass2 = (rule, value, callback) => {
      if (value === "") {
        callback(new Error("请再次输入密码"));
      } else if (value !== this.ruleForm.new_password) {
        callback(new Error("两次输入密码不一致!"));
      } else {
        callback();
      }
    };

    return {
      disabled: false, //默认能点击
      getSmsCodeLabel: "获取验证码",
      show_PassForm: true, //控制忘记密码框显示隐藏
      LoginForm: {
        name: "",
        pass: ""
      },
      timer: null,
      showError: null,
      countTimes: 60,
      ruleForm: {
        Mobile_phone: "",
        //修改密码
        new_password: "",
        checkPass: ""
      },
      rulespass: {
        Mobile_phone: [{ validator: telphon, trigger: "blur" }],
        new_password: [{ validator: validatePass, trigger: "blur" }],
        checkPass: [{ validator: validatePass2, trigger: "blur" }]
      }
    };
  },
  computed: {
    rules() {
      return {
        name: [{ required: true, message: "请输入用户名", trigger: "blur" }],
        pass: [
          {
            required: true,
            message: "请输入密码",
            trigger: "blur"
          }
        ]
      };
    }
  },
  methods: {
    ...mapActions(["savemenu"]),
    submitlogin() {
      this.showError = null;
      let user = { name: this.LoginForm.name };
      sessionStorage.setItem("user", JSON.stringify(user));
      var parms = {
        username: this.LoginForm.name,
        password: this.$md5(this.LoginForm.pass)
      };
      this.$refs["loginForm"].validate(valid => {
        if (valid) {
          userlogin(parms).then(res => {
            console.log(res);
            if (res.data.head.code == 0) {
              sessionStorage.setItem(
                "menudata",
                JSON.stringify(res.data.data.permissionTrees)
              );
              this.savemenu(res.data.data.permissionTrees);

              this.$router.push("/mainmap");
            } else {
              this.showError = "用户名或密码错误";
            }
          });
        } else {
          return false;
        }
      });
    },
    forgrtPass() {
      //忘记密码
      this.show_PassForm = !this.show_PassForm;
    },
    getCode() {
      //获取验证码
      console.log("888");
      this.$refs["ruleForm"].validateField("Mobile_phone", err => {
        // console.log("err", err);
        console.log(err);
        if (!err) {
          console.log("jinlaidedede");
          // this.disabled = true;
          // this.getSmsCodeLabel = this.countTimes + "s";
          // if (this.timer) {
          //   clearInterval(this.timer);
          // }
          // this.timer = setInterval(() => {
          //   if (this.countTimes == 0) {
          //     this.getSmsCodeLabel = "获取验证码";
          //     this.countTimes = 60;
          //     this.disabled = false;
          //     clearInterval(this.timer);
          //     return;
          //   }
          //   this.getSmsCodeLabel = --this.countTimes + "s";
          // }, 1000);
          // var parms = {
          //   tel: this.ruleForm.Mobile_phone,
          //   type: "modification"
          // };
          // forgetpassword(parms).then(res => {
          //   console.log(res);
          // });
        }
      });
    },
    submitForm(formName) {
      //确认修改
      this.$refs[formName].validate(valid => {
        if (valid) {
          alert("submit!");
        } else {
          console.log("error submit!!");
          return false;
        }
      });
    },
    resetForm(formName) {
      //清空
      this.$refs[formName].resetFields();
    }
  },
  mounted() {}
};
</script>
<style lang="scss" scoped>
.loginConteiner {
  position: relative;
  height: 100%;
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  background: #63bad8;
  //  background: url(../../assets/img/loginnackurl.jpg) no-repeat;
  overflow: hidden;
  background-size: cover;
  .form_login {
    width: 440px;
    height: 340px;
    margin-top: -170px;
    margin-left: -220px;
  }
  .from_passcheck {
    width: 540px;
    height: 440px;
    margin-top: -220px;
    margin-left: -270px;
    color: #fff;
  }

  .fromtable {
    position: absolute;
    top: 50%;
    left: 50%;

    background-color: rgba(22, 24, 67, 0.3);
    border: 1px solid #f2f2f2;
    border-radius: 10px;
    //text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;

    .inputwidth {
      width: 240px;
      background: #fff;
      border-radius: 5px;
    }
    .companyName {
      color: #fff;
      font-size: 20px;
    }
  }
  .statement {
    color: #fff;
    text-align: center;
    position: fixed;
    bottom: 20px;
    width: 100%;
    font-size: 20px;
  }
  .forget_password {
    float: right;
    margin-right: 20px;
    color: #fff;
  }
}
</style>
<style >
.Enter .el-input__inner {
  cursor: pointer;
  background: #1cc6e9;
  color: #fff;
}
.from_passcheck .el-form-item__label {
  color: #fff;
}
</style>


