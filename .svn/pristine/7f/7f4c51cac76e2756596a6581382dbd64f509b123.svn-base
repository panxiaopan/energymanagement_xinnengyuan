import {
  baseUrl
} from "../../static/baseurl";
import axios from "axios";
import qs from 'qs'

axios.defaults.baseURL = baseUrl; //接口变量..  引用过来编译的时候不会变,

axios.interceptors.request.use(
  config => {
    //const token = sessionStorage.getItem('token')
    //  let data = config.data
    console.log(config);
    if (config.method == "post") {
      let data = config.data;
      console.log("拦截");
      console.log(data);

      config.data = qs.stringify({
        ...config.data
        // token: token
      });
      return config;

      //let data = qs.parse(config.data)
      // config.data = qs.stringify({
      //  // token: token,
      //   ...data
      // })
    } else if (config.method === "get" || config.method === "delete") {
      config.params = {
        //token: token,
        ...config.params
      };
    }
    return config;
  },
  function (error) {
    return Promise.reject(error);
  }
);

//登录接口
export const userlogin = parms => {
  return axios.post("/session", parms);
};
//忘记密码重置
export const forgetpassword = parms => {
  return axios.post("session/telCode", parms);
};
//实时监控获取社会单位
export const getstations = parms => {
  return axios.get("/stations", {
    params: parms
  });
};
//获取能源站的汇总信息
export const getstationssummary = (stationId) => {
  return axios
    .get(`/stations/${stationId}/summary`)
}
//获取能源子站点类型信息
export const getstationsidNameType = (stationId) => {
  return axios
    .get(`/stations/${stationId}/subNodes/idNameType`)
}
//获取光伏子站汇总信息
export const getphotovoltaic = (stationId, subStationId) => {
  return axios
    .get(`stations/${stationId}/subNodes/${subStationId}/summary`)
}
//获取光伏子站日功率
export const getsolardata = (subStationId, parms) => {
  return axios
    .get(`stations/solar/${subStationId}/powers`, {
      params: parms
    })
}
//获取光伏子站发电信息
export const getsolaryearmonth = (subStationId, year, month) => {
  return axios
    .get(`stations/solar/${subStationId}/energys/${year}/${month}`)
}
